---
title: "Structural equation modeling and application in psychology (WIP)"
author: "Clément Poupelin"
date: 14-10-2025
date-modified: "`r Sys.Date()`"
format: 
  html:
    embed-resources: false
    toc: true
    code-fold: true
    code-summary: "Show the code"
    code-tools: true
    toc-location: right
    page-layout: article
    code-overflow: wrap
number-sections: false
editor: visual
categories: ["Structural Equation Modeling", "Psychology"]
description: "This study was made during the Supervised Study Project in Mathematics of the first year of master"
execute: 
  echo: true 
  warning: false 
  message: false
  error: true
---

# Intervenant.e.s

### Rédaction

-   **Clément Poupelin**, [clementjc.poupelin\@gmail.com](mailto:clementjc.poupelin@gmail.com){.email}\

### Relecture

-   

## Setup

::: panel-tabset
### packages

```{r}

```

### Functions

```{r}

```

### Seed

```{r}
set.seed(140400)
```
:::

## Abstract

sdfhsdkjfgsdkjf

## Import Data

```{r}
2+2
```

jhelfhzqlhflz

## Descriptive analysis

## Structural Equation Modeling

### Theory

### Application

::: panel-tabset
#### Model 1

#### Model 2

#### Model 3

#### Model 4
:::

library(readr)
# data <- read_csv("1. Workspace/Master IS/M1/SSPM/data.csv")
data <- read.csv("~/1. Workspace/Master_IS/M1/SSPM/data.csv")
# library(readxl)
#data <- read_excel("C:/Users/aela4/Desktop/SSPM/data.xlsx")

library(lavaan)
library(semPlot)
library(GGally)
library(car)
library(leaps)
library(MASS)
library(corrplot)
library(lmtest)
library(olsrr)
library(ggplot2)

summary(data)
dim(data)
#430  57

#visualisation de nos variables de mesure

#on ne garde que les effets positifs
es_selected = subset(data, select = c(es3, es5, es8, es9, es10)) 
compSoc_selected = subset(data, select = c(compSoc1, compSoc3, compSoc4, compSoc6))
compTemp_selected = subset(data, select = c(compTemp1, compTemp3, compTemp4, compTemp6))


par(mfrow=c(2,2))
boxplot(data[,2:17], col = 1:16, main ='Variables de spiritualité')
#boxplot(data[,19:26], col = 1:16, main ='Variables de comparaison sociale')
boxplot(compSoc_selected, col = 1:16, main ='Variables de comparaison sociale gardées pour le système')
#boxplot(data[,28:35], col = 1:16, main ='Variables de comparaison temporelle')
boxplot(compTemp_selected, col = 1:16, main ='Variables de comparaison temporelle gardées pour le système')
#boxplot(data[,37:46], col = 1:16, main ="Variables d'estime de soi")
boxplot(es_selected, col = 1:16, main ="Variables d'estime de soi gardées pour le système")

par(mfrow=c(1,1))


#### Premier modèle 
################################################################################

## Modèle de regression 

x = data$Score_Spirit
m = data$Score_CompS
y = data$Score_ES
M1 <- lm(m~x)
M2 <- lm(y~m+x)
summary(M1)
summary(M2)

library(car)
avPlots(M2)


## Modèle SEM

model1 <- '
# MODELE DE MESURE
CompSoc =~ compSoc1 + compSoc3 + compSoc4 + compSoc6
ES =~ es3 + es5 + es8 + es9 + es10
Spirit =~ spirit1 + spirit2 + spirit3 + spirit4 + spirit5 + spirit6 + spirit7 + spirit8 + spirit9 + spirit10 + spirit11 + spirit12 + spirit13 + spirit14 + spirit15 + spirit16

# MODELE DE STRUCTURE
CompSoc ~ c1 * Spirit
ES ~ b1 * CompSoc + b2 * Spirit

D := b2 
I := c1 * b1
T := D + I
'

fit1 = sem(model1, data = data, std.lv = T, se = "boot", bootstrap = 100)
summary(fit1, fit=T, rsquare=T)


labels =  c("compSoc1", "compSoc3", "compSoc4", "compSoc6",
            "es3", "es5", "es8" , "es9", "es10",
            'spirit1', 'spirit2', 'spirit3', 'spirit4', 'spirit5', 'spirit6', 'spirit7', 'spirit8', 'spirit9', 'spirit10', 'spirit11', 'spirit12', 'spirit13', 'spirit14', 'spirit15',  'spirit16',
            'Spiritualité', 'Comparaison\nSocial', 'Estime\nde\nsoi')

semPaths(fit1,
         rotation = 2,
         what = "paths",
         whatLabels = "std",
         #title = TRUE,
         #title.color = "black",
         #title.adj = 0.1,
         #curvePivot = T,
         #style="ram",
         layout = 'tree2',
         #intercepts = T,
         #residuals = T,
         #edge.label.cex=0.45, 
         nodeLabels = labels,
         groups="manlat",
         pastel=TRUE)
title('Modèle structurel 1')


#### Deuxième modèle 
################################################################################


model2 <- '
# MODELE DE MESURE
CompTemp =~ compTemp1 + compTemp3 + compTemp4 + compTemp6 
ES =~ es3 + es5 + es8 + es9 + es10
Spirit =~ spirit1 + spirit2 + spirit3 + spirit4 + spirit5 + spirit6 + spirit7 + spirit8 + spirit9 + spirit10 + spirit11 + spirit12 + spirit13 + spirit14 + spirit15 + spirit16

# MODELE DE STRUCTURE
CompTemp ~ u1 * Spirit
ES ~ v1 * CompTemp + v2 * Spirit

D := v2 
I := u1 * v1
T := D + I
'


fit2 = sem(model2, data = data, std.lv = T, se = "boot", bootstrap = 100)
summary(fit2, fit=T, rsquare=T)



labels2 =  c("compTemp1", "compTemp3", "compTemp4", "compTemp6",
            "es3", "es5", "es8" , "es9", "es10",
            'spirit1', 'spirit2', 'spirit3', 'spirit4', 'spirit5', 'spirit6', 'spirit7', 'spirit8', 'spirit9', 'spirit10', 'spirit11', 'spirit12', 'spirit13', 'spirit14', 'spirit15',  'spirit16',
            'Comparaison\nTemporelle', 'Estime\nde\nsoi', 'Spiritualité')

semPaths(fit2,
         rotation = 2,
         what = "paths",
         whatLabels = "std",
         #title = TRUE,
         #title.color = "black",
         #title.adj = 0.1,
         #curvePivot = T,
         #style="ram",
         layout = 'tree2',
         #intercepts = T,
         #residuals = T,
         #edge.label.cex=0.45, 
         nodeLabels = labels2,
         groups="manlat",
         pastel=TRUE)
title('Modèle structurel 2')


#### Troisième modèle 
################################################################################

model3 <- '
# MODELE DE MESURE
CompSoc =~ compSoc1 + compSoc3 + compSoc4 + compSoc6
CompTemp =~ compTemp1 + compTemp3 + compTemp4 + compTemp6 
ES =~ es3 + es5 + es8 + es9 + es10
Spirit =~ spirit1 + spirit2 + spirit3 + spirit4 + spirit5 + spirit6 + spirit7 + spirit8 + spirit9 + spirit10 + spirit11 + spirit12 + spirit13 + spirit14 + spirit15 + spirit16

# MODELE DE STRUCTURE
CompSoc ~ c1 * Spirit
CompTemp ~ d1 * Spirit
ES ~ b1 * CompSoc + b2 * CompTemp + b3 * Spirit


D := b3
I := (b1 * c1) + (b2 * d1)
T := D + I
'

fit3 = sem(model3, data = data, std.lv = T, se = "boot", bootstrap = 100)
summary(fit3, fit=T, rsquare=T)



labels3 =  c("compSoc1", "compSoc3", "compSoc4", "compSoc6",
             "compTemp1", "compTemp3", "compTemp4", "compTemp6",
             "es3", "es5", "es8" , "es9", "es10",
             'spirit1', 'spirit2', 'spirit3', 'spirit4', 'spirit5', 'spirit6', 'spirit7', 'spirit8', 'spirit9', 'spirit10', 'spirit11', 'spirit12', 'spirit13', 'spirit14', 'spirit15',  'spirit16',
             'Comparaison\nSocial' , 'Comparaison\nTemporelle', 'Estime\nde\nsoi', 'Spiritualité')




semPaths(fit3,
         rotation = 1,
         what = "paths",
         whatLabels = "std",
         #title = TRUE,
         #title.color = "black",
         #title.adj = 0.1,
         #curvePivot = T,
         #style="ram",
         layout = 'spring',
         #intercepts = T,
         #residuals = T,
         #edge.label.cex=0.45, 
         nodeLabels = labels3,
         groups="manlat",
         pastel=TRUE)
title('Modèle structurel 3')




#### Quatrième modèle 
################################################################################


model4 <- '
# MODELE DE MESURE
CompSoc =~ compSoc1 + compSoc3 + compSoc4 + compSoc6
CompTemp =~ compTemp1 + compTemp3 + compTemp4 + compTemp6 
ES =~ es3 + es5 + es8 + es9 + es10
Spirit =~ spirit1 + spirit2 + spirit3 + spirit4 + spirit5 + spirit6 + spirit7 + spirit8 + spirit9 + spirit10 + spirit11 + spirit12 + spirit13 + spirit14 + spirit15 + spirit16

# MODELE DE STRUCTURE
CompTemp ~ d1 * Spirit + d2 * CompSoc
CompSoc ~ c1 * Spirit
ES ~ b1 * CompSoc + b2 * CompTemp + b3 * Spirit



D := b3
I := (b1 * c1) + (b2 * d1) + (b2 * d2 * c1)
T := D + I
'


fit4 = sem(model4, data = data, std.lv = T, se = "boot", bootstrap = 100)
summary(fit4, fit=T, rsquare=T)


semPaths(fit4,
         rotation = 1,
         what = "paths",
         whatLabels = "std",
         #title = TRUE,
         #title.color = "black",
         #title.adj = 0.1,
         #curvePivot = T,
         #style="ram",
         layout = 'spring',
         #intercepts = T,
         #residuals = T,
         #edge.label.cex=0.45, 
         nodeLabels = labels3,
         groups="manlat",
         pastel=TRUE)
title('Modèle structurel 4')




#### Cinquièmé modéle 
################################################################################

# On va cette fois ci prendre ne considération tout les items effets + ou -



model5 <- '
# MODELE DE MESURE
CompSoc =~ compSoc1 + compSoc2 + compSoc3 + compSoc4 + compSoc5 + compSoc6 + compSoc7 + compSoc8
CompTemp =~ compTemp1 + compTemp2 + compTemp3 + compTemp4 + compTemp5 + compTemp6 + compTemp7 + compTemp8
ES =~ es1 + es2 + es3 + es4 + es5 + es6 + es7 + es8 + es9 + es10
Spirit =~ spirit1 + spirit2 + spirit3 + spirit4 + spirit5 + spirit6 + spirit7 + spirit8 + spirit9 + spirit10 + spirit11 + spirit12 + spirit13 + spirit14 + spirit15 + spirit16

# MODELE DE STRUCTURE
CompTemp ~ d1 * Spirit + d2 * CompSoc
CompSoc ~ c1 * Spirit
ES ~ b1 * CompSoc + b2 * CompTemp + b3 * Spirit



D := b3
I := (b1 * c1) + (b2 * d1) + (b2 * d2 * c1)
T := D + I
'

fit5 = sem(model5, data = data, std.lv = T, se = "boot", bootstrap = 100)
summary(fit5, fit=T, rsquare=T)

semPaths(fit5,
         rotation = 1,
         what = "paths",
         whatLabels = "std",
         #title = TRUE,
         #title.color = "black",
         #title.adj = 0.1,
         #curvePivot = T,
         #style="ram",
         layout = 'spring',
         #intercepts = T,
         #residuals = T,
         #edge.label.cex=0.45, 
         #nodeLabels = labels3,
         groups="manlat",
         pastel=TRUE)
title('Modèle structurel 5')



#### TEST
################################################################################

#### Other


library(readr)
library(lavaan)
library(semPlot)
# import the data directly from s3 bucket
data2 <- read.csv('https://articledatas3.s3.eu-central-1.amazonaws.com/StructuralEquationModelingData.csv')

# Print the data
head(data2 )


modelbis <- '
  # measurement model
    JobPerf =~ ClientSat + SuperSat + ProjCompl
    Social =~ PsychTest1 + PsychTest2
    Intellect =~ YrsEdu + IQ
    Motivation =~ HrsTrn + HrsWrk
  # regressions
    JobPerf ~ Social + Intellect + Motivation
'



fitbis <- sem(modelbis, data = data2)
summary(fitbis, standardized = TRUE)



semPaths(fitbis,
         rotation = 2,
         what = "paths",
         whatLabels = "std",
         #title = TRUE,
         #title.color = "black",
         #title.adj = 0.1,
         #curvePivot = T,
         #style="ram",
         layout = 'tree2',
         #intercepts = T,
         #residuals = T,
         #edge.label.cex=0.45, 
         #nodeLabels = labels3,
         groups="manlat",
         pastel=TRUE)









